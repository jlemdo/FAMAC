# fastlane/Fastfile

default_platform(:ios)

platform :ios do
  desc "Build and upload a new beta build to TestFlight"
  lane :beta do
    ################################################
    # 1️⃣  Crea el App Store Connect API Key
    ################################################
    api_key = app_store_connect_api_key(
      key_id:     ENV['APP_STORE_CONNECT_API_KEY_KEY_ID'],
      issuer_id:  ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_CONTENT'].gsub("\\n", "\n")
    )

    ################################################
    # 2️⃣  Firma con match usando la API Key
    ################################################
    match(
      type:    "appstore",
      api_key: api_key
    )

    ################################################
    # 3️⃣  (Pods ya fueron instalados en el workflow)
    #     NO LLAMAMOS `cocoapods` AQUÍ
    ################################################

    ################################################
    # 4️⃣  Compila la app
    ################################################
     build_app(
      workspace:     "ios/MyNewApp.xcworkspace",     # ajusta al path real
      scheme:        "MyNewApp",                      # ajusta al scheme real
      export_method: "app-store",
      clean:         true,

      # 1️⃣ Permitimos a xcodebuild gestionar perfiles automáticamente
      xcargs:        "-allowProvisioningUpdates CODE_SIGN_STYLE=Automatic",  
      # 2️⃣ También al exportar el .ipa
      export_xcargs: "-allowProvisioningUpdates",

      # 3️⃣ Equipo y perfil de distribución (ya creado por match)
      export_team_id: ENV['DEVELOPMENT_TEAM'],
      export_options: {
        provisioningProfiles: {
          "com.occr.productos" => "match AppStore com.occr.productos"
        }
      }
    )


    ################################################
    # 5️⃣  Sube a TestFlight usando la misma API Key
    ################################################
    upload_to_testflight(api_key: api_key)
  end
end
