default_platform(:ios)

platform :ios do
  desc "Build & upload a TestFlight beta with correct Bundle ID and signing"
  lane :beta do
    # 0️⃣ Asegurar el Bundle Identifier coincide con Match
    update_app_identifier(
      xcodeproj:  "ios/MyNewApp.xcodeproj",
      plist_path: "MyNewApp/Info.plist",
      app_identifier: "com.occr.productos"
    )

    # 1️⃣ Inyectar el Team ID en el proyecto
    update_project_team(
      path:    "ios/MyNewApp.xcodeproj",
      targets: ["MyNewApp"],
      teamid:  ENV["DEVELOPMENT_TEAM"]
    )

    # 2️⃣ Desactivar signing automático en Release y configurar manualmente
    update_code_signing_settings(
      use_automatic_signing: false,
      path:                  "ios/MyNewApp.xcodeproj",
      team_id:               ENV["DEVELOPMENT_TEAM"],
      targets:               ["MyNewApp"],
      build_configurations:  ["Release"],
      code_sign_identity:    "Apple Distribution",
      profile_name:          "match AppStore com.occr.productos"
    )

    # 3️⃣ Descargar perfiles y certificados con Match (solo lectura)
    api_key = app_store_connect_api_key(
      key_id:      ENV['APP_STORE_CONNECT_API_KEY_KEY_ID'],
      issuer_id:   ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_CONTENT'].gsub("\\n", "\n")
    )
    match(type: "appstore", api_key: api_key, readonly: true)

    # 4️⃣ Compilar usando Gym (build_app)
    build_app(
      workspace:        "ios/MyNewApp.xcworkspace",
      scheme:           "MyNewApp",
      configuration:    "Release",
      clean:            true,
      export_method:    "app-store",
      output_directory: "build",   # donde quieres el .xcarchive
      output_name:      "MyNewApp",
      export_options: {
        provisioningProfiles: {
          "com.occr.productos" => "match AppStore com.occr.productos"
        }
      }
    )

    # 5️⃣ Subir a TestFlight
    upload_to_testflight(api_key: api_key)
  end
end
