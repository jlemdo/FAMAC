default_platform(:ios)

platform :ios do
  desc "Build & upload a TestFlight beta with correct Bundle ID and signing"
  lane :beta do
    # 0Ô∏è‚É£  Asegurar el Bundle Identifier coincide con Match
    update_app_identifier(
      xcodeproj:      "ios/MyNewApp.xcodeproj",
      plist_path:     "MyNewApp/Info.plist",
      app_identifier: "com.occr.productos"
    )

    # 1Ô∏è‚É£  Inyectar el Team ID en el proyecto
    update_project_team(
      path:    "ios/MyNewApp.xcodeproj",
      targets: ["MyNewApp"],
      teamid:  ENV["DEVELOPMENT_TEAM"]
    )

    # 2Ô∏è‚É£  Activar Signing Autom√°tico
     update_code_signing_settings(
       use_automatic_signing: false,                            # üîí Desactiva automatic signing
       path:                  "ios/MyNewApp.xcodeproj",        # Ruta a tu proyecto
       team_id:               ENV["DEVELOPMENT_TEAM"],         # Tu Team ID
       targets:               ["MyNewApp"],                     # S√≥lo tu target principal
       build_configurations:  ["Release"],                      # S√≥lo para Release (archive)
       code_sign_identity:    "Apple Distribution",             # Tipo de certificado
       profile_name:          "match AppStore com.occr.productos"  # Nombre exacto del profile
     )

    # 3Ô∏è‚É£  Descargar perfiles y certificados con Match (solo lectura)
    api_key = app_store_connect_api_key(
      key_id:      ENV['APP_STORE_CONNECT_API_KEY_KEY_ID'],
      issuer_id:   ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_CONTENT'].gsub("\\n", "\n")
    )
    match(type: "appstore", api_key: api_key, readonly: true)

    # 4Ô∏è‚É£  Compilar manualmente y capturar log usando PROJECT_ROOT
    sh <<~SHELL
      set -o pipefail

      # Calcula el root del repo (un nivel arriba de fastlane/)
      PROJECT_ROOT="#{File.expand_path('..', Dir.pwd)}"

      # Invoca xcodebuild con rutas absolutas
      xcodebuild \
        -workspace "$PROJECT_ROOT/ios/MyNewApp.xcworkspace" \
        -scheme MyNewApp \
        -configuration Release \
        -sdk iphoneos \
        clean archive \
        -archivePath "$PROJECT_ROOT/build/MyNewApp.xcarchive" \
      2>&1 | tee "$PROJECT_ROOT/xcodebuild.log"
    SHELL

    # 4Ô∏è‚É£b  Mostrar √∫ltimas 200 l√≠neas de log si falla
    sh <<~SHELL
      if [ $? -ne 0 ]; then
        echo "----- xcodebuild.log (√∫ltimas 200 l√≠neas) -----"
        tail -n 200 "$PROJECT_ROOT/xcodebuild.log"
        exit 1
      fi
    SHELL

    # 5Ô∏è‚É£  Subir a TestFlight
    upload_to_testflight(api_key: api_key)
  end
end
