default_platform(:ios)

platform :ios do
  desc "Build & upload a TestFlight beta with correct Bundle ID and signing"
  lane :beta do
    setup_ci
    # 0️⃣ Bundle ID
    update_app_identifier(
      xcodeproj:  "ios/MyNewApp.xcodeproj",
      plist_path: "MyNewApp/Info.plist",
      app_identifier: "com.occr.productos"
    )

    # 1️⃣ Team ID
    update_project_team(
      path:    "ios/MyNewApp.xcodeproj",
      targets: ["MyNewApp"],
      teamid:  ENV["DEVELOPMENT_TEAM"]
    )

    # 2️⃣ Signing manual para Release
    update_code_signing_settings(
      use_automatic_signing: false,
      path:                  "ios/MyNewApp.xcodeproj",
      team_id:               ENV["DEVELOPMENT_TEAM"],
      targets:               ["MyNewApp"],
      build_configurations:  ["Release"],
      code_sign_identity:    "Apple Distribution",
      profile_name:          "match AppStore com.occr.productos"
    )

    # ➡️ AÑADIMOS AQUÍ
    increment_build_number(
      xcodeproj:   "ios/MyNewApp.xcodeproj",
      build_number: Time.now.strftime("%Y%m%d%H%M")
    )


    # 3️⃣ Match readonly
    api_key = app_store_connect_api_key(
      key_id:      ENV['APP_STORE_CONNECT_API_KEY_KEY_ID'],
      issuer_id:   ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_CONTENT'].gsub("\\n", "\n")
    )

    match(type: "appstore", api_key: api_key, readonly: true, clone_branch_directly:  true )

    # 1️⃣ Bundling RN para iOS
    sh(<<-CMD)
      cd #{Dir.pwd} &&
      npx react-native bundle \
        --entry-file index.js \
        --platform ios \
        --dev false \
        --bundle-output ios/main.jsbundle \
        --assets-dest ios/assets
    CMD

    # 2️⃣ Abort si no existe el bundle
    unless File.exist?("ios/main.jsbundle")
      UI.user_error!("❌ No se generó ios/main.jsbundle — abortando deploy.")
    end

    # 4️⃣ Compilar con Gym
    begin
      build_app(
        workspace:        "ios/MyNewApp.xcworkspace",
        scheme:           "MyNewApp",
        configuration:    "Release",
        clean:            true,
        export_method:    "app-store",
        output_directory: "build",
        output_name:      "MyNewApp",
        export_options: {
          provisioningProfiles: {
            "com.occr.productos" => "match AppStore com.occr.productos"
          }
        }
      )
    rescue => exception
      sh("echo '----- GYM LOG (últimas 200 líneas) -----'")
      sh("tail -n200 ~/Library/Logs/gym/MyNewApp-MyNewApp.log")
      raise exception
    end

    ipa_path = Actions.lane_context[SharedValues::IPA_OUTPUT_PATH] # => "/Users/.../build/MyNewApp.ipa"
    sh("unzip -l #{ipa_path} | grep -i main.jsbundle")


    # 5️⃣ Subir a TestFlight
    upload_to_testflight(api_key: api_key)
  end
end
