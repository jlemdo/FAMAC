# Fastfile

default_platform(:ios)

platform :ios do
  desc "Build & upload a TestFlight beta con firma y bundle dinámicos"
  lane :beta do
    # ➊ Configura Fastlane para CI (crea y desbloquea keychain, sin prompts)
    setup_ci(
      keychain_name: ENV.fetch("CI_KEYCHAIN_NAME", "fastlane-ci"),
    )

    # ➋ Bundle Identifier dinámico
    update_app_identifier(
      xcodeproj:      "ios/MyNewApp.xcodeproj",
      plist_path:     "MyNewApp/Info.plist",
      app_identifier: "com.occr.productos"
    )

    # ➌ Team ID
    update_project_team(
      path:    "ios/MyNewApp.xcodeproj",
      targets: ["MyNewApp"],
      teamid:  ENV.fetch("DEVELOPMENT_TEAM")
    )

    # ➍ Firma manual para Release
    update_code_signing_settings(
      use_automatic_signing: false,
      path:                  "ios/MyNewApp.xcodeproj",
      team_id:               ENV.fetch("DEVELOPMENT_TEAM"),
      targets:               ["MyNewApp"],
      build_configurations:  ["Release"],
      code_sign_identity:    "Apple Distribution",
      profile_name:          "match AppStore #{ENV.fetch("APP_IDENTIFIER")}"
    )

    # ➎ Crea el objeto API Key para App Store Connect
    api_key = app_store_connect_api_key(
      key_id:      ENV.fetch('APP_STORE_CONNECT_API_KEY_KEY_ID'),
      issuer_id:   ENV.fetch('APP_STORE_CONNECT_API_KEY_ISSUER_ID'),
      key_content: ENV.fetch('APP_STORE_CONNECT_API_KEY_CONTENT').gsub("\\n", "\n")
    )

    # ➏ Descarga certificados/profiles con match (SSH+git_url) en readonly
    match(
      git_url:               ENV.fetch("MATCH_GIT_URL"),
      type:                  "appstore",
      api_key:               api_key,
      readonly:              true,
      clone_branch_directly: true
    )

    # ➐ Compila el .ipa sin xcpretty para logs completos
    build_app(
      workspace:        "ios/MyNewApp.xcworkspace",
      scheme:           "MyNewApp",
      configuration:    "Release",
      clean:            true,
      export_method:    "app-store",
      output_directory: "build",
      output_name:      "MyNewApp.ipa",
      disable_xcpretty: true,
      export_options: {
        provisioningProfiles: {
          ENV.fetch("APP_IDENTIFIER") => "match AppStore #{ENV.fetch("APP_IDENTIFIER")}"
        }
      }
    )

    # ➑ Sube a TestFlight sin esperar procesamiento
    upload_to_testflight(
      api_key:                            api_key,
      skip_waiting_for_build_processing: true
    )
  end
end
