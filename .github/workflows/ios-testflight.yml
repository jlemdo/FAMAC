name: üöÄ Build & Upload TestFlight

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# on:
#   workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Cache Ruby gems y CocoaPods
        uses: actions/cache@v3
        with:
          path: |
            ~/.gem
            ~/.cocoapods
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}

      - name: Instala CocoaPods
        run: sudo gem install cocoapods

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Instala dependencias JS
        # run: yarn install --frozen-lockfile
        run: npm ci

      - name: Select Xcode 16
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2.0'
      
      - name: Verifica versi√≥n de Xcode
        run: xcodebuild -version

      - name: Configure Apple Pay Entitlements (Automated)
        run: |
          echo "üçé Setting up Apple Pay entitlements automatically..."
          
          # Crear entitlements autom√°ticamente
          mkdir -p ios/MyNewApp
          cat > ios/MyNewApp/MyNewApp.entitlements << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>com.apple.developer.in-app-payments</key>
              <array>
                  <string>merchant.com.occr.productos</string>
              </array>
              <key>aps-environment</key>
              <string>development</string>
          </dict>
          </plist>
          EOF
          
          # Actualizar project.pbxproj para Debug configuration
          sed -i.backup '/CLANG_ENABLE_MODULES = YES;/{
          N
          /CURRENT_PROJECT_VERSION = 1;/i\
          				CODE_SIGN_ENTITLEMENTS = MyNewApp/MyNewApp.entitlements;
          }' ios/MyNewApp.xcodeproj/project.pbxproj
          
          echo "‚úÖ Apple Pay entitlements configured automatically"
          
      - name: Verify Firebase source file exists
        run: |
          echo "üîç Verificando GoogleService-Info.plist source file..."
          if [ -f "ios/MyNewApp/GoogleService-Info.plist" ]; then
            echo "‚úÖ Source file found: ios/MyNewApp/GoogleService-Info.plist"
            echo "üìã File size: $(wc -c < ios/MyNewApp/GoogleService-Info.plist) bytes"
          else
            echo "‚ùå GoogleService-Info.plist not found at ios/MyNewApp/"
            exit 1
          fi
          
      - name: Instala CocoaPods pods
        working-directory: ios
        run: pod install --repo-update

      - name: Run Fastlane lane
        env:
          MATCH_GIT_URL:                    ${{ secrets.MATCH_GIT_URL }}
          MATCH_PASSWORD:                   ${{ secrets.MATCH_PASSWORD }}
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT:   ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
          DEVELOPMENT_TEAM:                 ${{ secrets.DEVELOPMENT_TEAM }}
          APP_IDENTIFIER:                   ${{ secrets.APP_IDENTIFIER }}
          CI_KEYCHAIN_NAME:                 fastlane-ci
        run: bundle install && bundle exec fastlane ios beta
