name: üêû iOS Quick Debug

# Se ejecuta solo manualmente
on:
  workflow_dispatch:

jobs:
  quick-debug:
    if: ${{ github.event.inputs.debug == 'true' }}
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Ruby & CocoaPods
        run: |
          sudo gem install cocoapods

      - name: Install JS deps
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: yarn install --frozen-lockfile

      - name: Install Pods
        working-directory: ios
        run: pod install --repo-update

      - name: Build & Run en simulador
        run: |
          set -eux

          # Apago cualquier simulador
          xcrun simctl shutdown all || true

          # Extraigo el primer UDID disponible (iPhone 15, 16‚Ä¶)
          DEVICE_UDID=$(
            xcrun simctl list devices available \
              | grep -oE '\([A-F0-9-]{36}\)' \
              | tr -d '()' \
              | head -n1
          )
          echo "üèÅ Booting simulator: $DEVICE_UDID"
          xcrun simctl boot "$DEVICE_UDID"

          # Compilo y testeo
          xcodebuild \
            -workspace ios/MyNewApp.xcworkspace \
            -scheme MyNewApp \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination "id=$DEVICE_UDID" \
            build test

          # Instalo y lanzo la app
          APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -maxdepth 2 -name MyNewApp.app | head -n1)
          xcrun simctl install booted "$APP_PATH"
          xcrun simctl launch booted com.occr.productos || true

          # Opcional: ver logs  de la app 60s
          xcrun simctl spawn booted log stream --predicate 'processImagePath CONTAINS "MyNewApp"' --style compact --timeout 60